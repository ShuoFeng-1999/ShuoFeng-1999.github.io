<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>访问表错误</title>
      <link href="/fang-wen-biao-cuo-wu/2021/08/03/"/>
      <url>/fang-wen-biao-cuo-wu/2021/08/03/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一-引言"><a href="#一-引言" class="headerlink" title="一,引言:"></a>一,引言:</h1><p>今天在做练手项目时,用SQLyog创建数据表时遇到了错误,在SQLyog中该表显示正常创建,但是在cmd命令窗框打开mysql命令行查看表结构或是查询数据都会报错</p><h1 id="二-详解"><a href="#二-详解" class="headerlink" title="二,详解:"></a>二,详解:</h1><h2 id="1-情况详解"><a href="#1-情况详解" class="headerlink" title="1,情况详解:"></a>1,情况详解:</h2><p>SQLyog查询到的表详情:</p><pre class="line-numbers language-none"><code class="language-none">/*列信息*/-----------Field            Type      Collation        Null    Key     Default  Extra   Privileges                       Comment             ---------------  --------  ---------------  ------  ------  -------  ------  -------------------------------  --------------------ordernum         char(16)  utf8_general_ci  NO      PRI     (NULL)           select,insert,update,references  订单编号        code             char(24)  utf8_general_ci  NO              (NULL)           select,insert,update,references  账号              typeno           int       (NULL)           NO      MUL     (NULL)           select,insert,update,references  账号类型编号  bookname         char(24)  utf8_general_ci  NO              (NULL)           select,insert,update,references  书名              bookno           char(24)  utf8_general_ci  NO      MUL     (NULL)           select,insert,update,references  书籍编号        lendtiem         date      (NULL)           NO              (NULL)           select,insert,update,references  借书时间        repaytime        date      (NULL)           NO              (NULL)           select,insert,update,references  还书时间        overdue          int       (NULL)           NO              (NULL)           select,insert,update,references  逾期              penalty          int       (NULL)           NO              (NULL)           select,insert,update,references  罚款              penaltystatusno  int       (NULL)           NO      MUL     (NULL)           select,insert,update,references  罚款状态编号  statusno         int       (NULL)           NO      MUL     (NULL)           select,insert,update,references  状态编号        operator         char(24)  utf8_general_ci  NO              (NULL)           select,insert,update,references  操作员           /*索引信息*/--------------Table   Non_unique  Key_name  Seq_in_index  Column_name      Collation  Cardinality  Sub_part  Packed  Null    Index_type  Comment  Index_comment  Visible  Expression  ------  ----------  --------  ------------  ---------------  ---------  -----------  --------  ------  ------  ----------  -------  -------------  -------  ------------order            0  PRIMARY              1  ordernum         A                    0    (NULL)  (NULL)          BTREE                               YES      (NULL)      order            1  statusid             1  statusno         A                    0    (NULL)  (NULL)          BTREE                               YES      (NULL)      order            1  bookno               1  bookno           A                    0    (NULL)  (NULL)          BTREE                               YES      (NULL)      order            1  typeno               1  typeno           A                    0    (NULL)  (NULL)          BTREE                               YES      (NULL)      order            1  penalty              1  penaltystatusno  A                    0    (NULL)  (NULL)          BTREE                               YES      (NULL)                                                                                                                                                                              /*DDL 信息*/------------CREATE TABLE `order` (  `ordernum` char(16) NOT NULL COMMENT '订单编号',  `code` char(24) NOT NULL COMMENT '账号',  `typeno` int NOT NULL COMMENT '账号类型编号',  `bookname` char(24) NOT NULL COMMENT '书名',  `bookno` char(24) NOT NULL COMMENT '书籍编号',  `lendtiem` date NOT NULL COMMENT '借书时间',  `repaytime` date NOT NULL COMMENT '还书时间',  `overdue` int NOT NULL COMMENT '逾期',  `penalty` int NOT NULL COMMENT '罚款',  `penaltystatusno` int NOT NULL COMMENT '罚款状态编号',  `statusno` int NOT NULL COMMENT '状态编号',  `operator` char(24) NOT NULL COMMENT '操作员',  PRIMARY KEY (`ordernum`),  KEY `statusid` (`statusno`),  KEY `bookno` (`bookno`),  KEY `typeno` (`typeno`),  KEY `penalty` (`penaltystatusno`),  CONSTRAINT `bookno` FOREIGN KEY (`bookno`) REFERENCES `bookno` (`bookno`),  CONSTRAINT `penalty` FOREIGN KEY (`penaltystatusno`) REFERENCES `penalty` (`penaltystatusno`),  CONSTRAINT `statusid` FOREIGN KEY (`statusno`) REFERENCES `status` (`statusno`),  CONSTRAINT `typeno` FOREIGN KEY (`typeno`) REFERENCES `type` (`typeno`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在cmd查询时遇到的错误:</p><pre class="line-numbers language-none"><code class="language-none">mysql&gt; show tables;+----------------+| Tables_in_test |+----------------+| bookinfo       || bookno         || order          || penalty        || species        || status         || type           || user           |+----------------+8 rows in set (0.00 sec)mysql&gt; desc order;ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order' at line 1mysql&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-原因"><a href="#2-原因" class="headerlink" title="2,原因:"></a>2,原因:</h2><p>因为order是order by排序的关键字,在查询时会把order当成关键字,初学者要注意mysql关键字的使用.尽量避免使用关键字.</p>]]></content>
      
      
      <categories>
          
          <category> MySql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图书管理系统</title>
      <link href="/tu-shu-guan-li-xi-tong/2021/08/02/"/>
      <url>/tu-shu-guan-li-xi-tong/2021/08/02/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一-前言"><a href="#一-前言" class="headerlink" title="一, 前言:"></a>一, 前言:</h1><p>随着对 Javaweb 的学习,想要尝试做一些项目,该文档是为了指导开发图书管理系统编写的.该文档是对图书管理系统涉及的功能,用户等级,界面,以及技术进行了明确.为项目开发提供明确的思路.</p><p>项目仓库:</p><h1 id="二-系统分析"><a href="#二-系统分析" class="headerlink" title="二,系统分析:"></a>二,系统分析:</h1><h2 id="2-1-系统可行性分析"><a href="#2-1-系统可行性分析" class="headerlink" title="2.1,系统可行性分析:"></a>2.1,系统可行性分析:</h2><p>可行性分析是在进行初步调查后所尽心的对系统开发必要性和可行性的研究,所以也叫做可行性研究.信息系统也应从技术可行性,经济可行性和社会可行性三方面来论证.通过对javaweb练手项目的观察,我认为图书管理系统的可行性分析如下:</p><h3 id="2-1-1-经济可行性分析"><a href="#2-1-1-经济可行性分析" class="headerlink" title="2.1.1,经济可行性分析:"></a>2.1.1,经济可行性分析:</h3><p>该项目是为了验证在学习中编程技术的检验情况而开发的,对于经济要求不高,可忽略.</p><h3 id="2-1-2-技术可行性分析"><a href="#2-1-2-技术可行性分析" class="headerlink" title="2.1.2,技术可行性分析:"></a>2.1.2,技术可行性分析:</h3><p>技术上的可行性分析主要分析享有技术条件能否顺利完成开发工作,硬件,软件配置能否满足开发者的需要,图书管理系统的工作主要是便于读者与图书馆之间架起一座桥梁,能相互沟通信息和处理问题,这一特点非常适合计算机特点,通过网络 Internet 技术,发挥计算机的信息传输速度快,准确度高的有事.计算机硬件和软件技术的飞速发展,为系统的建设提供了技术条件.</p><h3 id="2-1-3-社会可行性分析"><a href="#2-1-3-社会可行性分析" class="headerlink" title="2.1.3,社会可行性分析:"></a>2.1.3,社会可行性分析:</h3><p>社会可行性分析有时也称操作可行性,主要论证新系统开发和运行的可能性以及运行后对企业或机构的影响,通过对多数javawe项目的挑选,我选择该系统进行技术检验,</p><h2 id="2-2-系统需求分析"><a href="#2-2-系统需求分析" class="headerlink" title="2.2,系统需求分析:"></a>2.2,系统需求分析:</h2><p>该项目的图书管理系统设置图书信息,系统用户信息,读者信息,图书 节约等多种数据管理,从管理的角度可将系统分为三类:图书信息管理,系统用户管理,读者数据管理.图书嘻嘻管理包括图书征订,借还,查询等操作,系统用户管理包括系统用户类别,和用户数据管理,读者数据管理包括读者类别和个人数据的录入,修改和删除.</p><p>图书借阅者的需求是查询图书馆所存图书,个人节约情况及个人信息的修改;图书馆工作人员对图书借阅者的借阅及幻术要求进行操作,同时想成结束或还书报表给借阅者查看确认;图书管理人员的功能最为复杂,包括对工作人员,图书借阅者,图书进行管理和维护,及系统状态的查看,维护等.图书借阅者可直接查看图书馆图书情况,如果图书借阅者根据本人借书证号和密码登录系统,还可以进行本人结束情况的查询和维护部分个人信息,一般情况下,图书借阅者只应该查询和维护本人的结束情况和个人信息.图书馆工作人员有修改图书借阅者借书和还书记录的权限,所以需对工作人员登录本模块进行更多的考虑,在此模块中,图书馆工作人员可以为图书借阅者加入借书记录或是还书记录,并打印生成相应的报表给用户查看和确认,图书管理人员功能的信息量最大,数据安全性和保密性要求最高,本功能实现对图书信息,借阅者信息,总体借阅情况信息的管理和同届,工作人员和管理人员信息查看及维护.图书管理员可以以浏览,查询添加,删除,修改,统计图书的基本信息:浏览,查询,统计,添加,删除和修改借阅者的基本信息,浏览、查询、统计图书馆的借阅信息，但不能添加、删除和修改借阅信息，这部分功能应该由图书馆工作人员执行，但是，删除某条图书借阅者基本信息记录时，应实现对该图书借阅者借阅记录的级联删除。并且还应具有生成催还图书报表，并打印输出的功能。  </p><h2 id="2-3-系统的功能需求"><a href="#2-3-系统的功能需求" class="headerlink" title="2.3,系统的功能需求:"></a>2.3,系统的功能需求:</h2><p>在本系统中,对读者来说,它们关心的问题其实是如何方便的查询到图书馆中的书籍以及自己正在借阅或是已经借阅过些什么书,所街的书是否到期等,由此可以得出系统在面向读者方面应该至少做到如下几点:</p><p>1,图书查询.</p><p>2,读者信息查询,读者信息查询的内容应包括以下几个方面:</p><p>​    读者信息—对读者的基本信息进行显示.</p><p>​    书刊借阅—对该读者借阅过的所有书籍进行查询.</p><p>​    借阅历史—查询该读者借阅过的所有书籍</p><p>​    违规信息—该读者的违规信息</p><p>​    读者规则—读者所应用的规则.</p><p>对系统管理员来说,应该注意的是:</p><p>1,图书馆中有哪些书,它们存放的位置,是否可以被借阅;</p><p>2,对本图书馆发放的读者证有哪些,如何管理这些读书证;</p><p>3,这些读书证都借阅着哪些书;</p><p>4,如何确定这些读书证是否可用,以及借书的患期等.</p><p>从以上问题出发,可以得出本系统应该具有的功能:</p><p>1,图书查询—对管呃逆的图书进行查询</p><p>2,借阅管理—对读者的每次借阅,还书进行登记和管理</p><p>3,图书管理—对图书的书籍进行管理</p><p>4,借阅证管理—对读者的借阅证进行管理</p><p>5,读者规则管理—设置和管理读者规则</p><h2 id="2-4-设计模式"><a href="#2-4-设计模式" class="headerlink" title="2.4,设计模式:"></a>2.4,设计模式:</h2><p>设计模式是面向对象的程序设计人员用来解决编程问题的一种形式化表示.本系统开发采用目前一种广泛流行的软件设计模式,MVC应用程序结构被用来分析分布式应用程序的特征.这种抽象结构有助于应用程序分割成若干逻辑部件,是程序设计变得更加容易.把一个应用的输入,处理,输出流程按照model,view,controller的方式进行分离.</p><h1 id="三-系统设计"><a href="#三-系统设计" class="headerlink" title="三,系统设计:"></a>三,系统设计:</h1><h2 id="3-1-系统概要"><a href="#3-1-系统概要" class="headerlink" title="3.1,系统概要:"></a>3.1,系统概要:</h2><p>本图书管理系统总体上分为前台页面显示,和后台管理.前台页面(即本图书管理系统的首页)实现了公告的显示图书查询,留言简易三大功能.而后台的页面则集成了图书管理重所需的功能和录入新书到库,办公图书,借还手续,查询图书等等,平时如数管理人员的工作都是在后台中完成的,前台是为用户显示的,用户可以看到图书管理人员发布的最新公告信息;并可以查询自己感兴趣的图书,也可以给管理人员留言简易.相应的后台针对的是管理人员,后台的页面都加密,如果不正常登录是进入不了后台管理页面的,后台工鞥能具体包括:发布首页公告,添加新书到库等等</p><h2 id="3-2-功能模块"><a href="#3-2-功能模块" class="headerlink" title="3.2,功能模块:"></a>3.2,功能模块:</h2><p>本系统的功能模块的设计如图所示,整个系统包含图书信息管理,添加,删除,修改,查询图书信息管理,用户信息设置,图书借阅管理.</p><img src="/medias/JavaWeb/BookManagementSystem/FunctionModule.jpg" alt="功能模块"><h2 id="3-3-设计思想"><a href="#3-3-设计思想" class="headerlink" title="3.3,设计思想:"></a>3.3,设计思想:</h2><p>利用软件开发现有软硬件环境,及先进的管理信息系统开发方案,从而达到充分利用现有资源提高系统开发水平和应用想过的目的.</p><p>系统应该符合软件功能开发的理论,开发方法等开发依据.</p><p>系统应满足图书馆管理工作需要,到操作过程中的直观,方便,使用,安全等要求.</p><p>系统具备数据库维护功能,及时根据用户需求进行数据库的各种操作.</p><p>系统采用圆形,使用模块化程序设计方法,便于系统功能的各种组合和修改,以及系统的测试与维护.</p><h2 id="3-4-模块设计及功能"><a href="#3-4-模块设计及功能" class="headerlink" title="3.4,模块设计及功能:"></a>3.4,模块设计及功能:</h2><h3 id="3-4-1-图书查询"><a href="#3-4-1-图书查询" class="headerlink" title="3.4.1,图书查询:"></a>3.4.1,图书查询:</h3><p>读者可以通过网络访问图书管理系统,并对管内图书进行查询,对查到的在馆图书可以进行借阅,如图:</p><img src="/medias/JavaWeb/BookManagementSystem/QueryBook.jpg" alt="图书查询流程图"><h3 id="3-4-2-借阅管理"><a href="#3-4-2-借阅管理" class="headerlink" title="3.4.2,借阅管理:"></a>3.4.2,借阅管理:</h3><p>这一部分对图书借阅,书籍归还的管理,当用户借书时,图书管理员把书籍的编号和读者的借阅证号输入系统,当此次借阅方盒借阅规则的时候,借阅成功.并将结果写入到数据库中.读者归还书籍时,将图书交给图书管理员,管理员把书籍的编号和读者的借阅证号输入系统,系统核对借阅规则,对违规(如超期)的读者进行罚款之类的,如图:</p><img src="/medias/JavaWeb/BookManagementSystem/Borrowing.jpg" alt="图书借阅流程图"><h3 id="3-4-3-图书管理"><a href="#3-4-3-图书管理" class="headerlink" title="3.4.3,图书管理:"></a>3.4.3,图书管理:</h3><p>图书管理主要实现的功能是对新购的图书进行入库和废书记录从库中删除,当新书被放入图书馆时,管理员登录进入系统,把图书的信息添加到图书馆管理系统中,并指定是放到哪一个位置,这时图书可以被用户查询到,并可以借阅.当要把一本废书删除时,图书管理员登录进入系统,查找到这一本书,并将其删除.这时,这一本图书不再能被查询到</p><img src="/medias/JavaWeb/BookManagementSystem/Management.jpg" alt="图书管理流程图"><h3 id="3-4-4-借阅管理"><a href="#3-4-4-借阅管理" class="headerlink" title="3.4.4,借阅管理:"></a>3.4.4,借阅管理:</h3><p>本部分是对借阅凭证进行管理,并对用户的一些基本信息进行维护,提供增,删,改等功能.每一个借阅凭证都要符合用户规则巨鼎可以借阅书籍的等级,如:借书时间,种类等.当读者借阅凭证丢失时,可以进行挂失处理,持失之后借阅凭证失效,如图:</p><img src="/medias/JavaWeb/BookManagementSystem/LibraryCard.jpg" alt="借阅凭证管理流程图"><h3 id="3-4-5-借阅规则管理"><a href="#3-4-5-借阅规则管理" class="headerlink" title="3.4.5,借阅规则管理:"></a>3.4.5,借阅规则管理:</h3><p>借阅规则包括借阅时间,可借阅的图书数目等.这一部分可以对借阅规则进行管理,主要是增,删,改,操作,如图:</p><img src="/medias/JavaWeb/BookManagementSystem/Rules.jpg" alt="借阅规则管理流程图"><h3 id="3-4-6-借还图书功能流程图"><a href="#3-4-6-借还图书功能流程图" class="headerlink" title="3.4.6,借还图书功能流程图:"></a>3.4.6,借还图书功能流程图:</h3><img src="/medias/JavaWeb/BookManagementSystem/Borrowed.jpg" alt="借阅还功能流程图"><h2 id="3-5-数据库设计"><a href="#3-5-数据库设计" class="headerlink" title="3.5,数据库设计:"></a>3.5,数据库设计:</h2><p>表一:书籍信息:</p><p>​    E-R图: 创建四张表,bookinfo,bookno,species和status</p><img src="/medias/JavaWeb/BookManagementSystem/BookE-R.jpg" alt="书籍E-R图"><p>bookinfo表创建代码:</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE `bookinfo` (  `id` int(10) unsigned zerofill NOT NULL AUTO_INCREMENT COMMENT 'id',  `bookname` char(24) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '书名',  `author` char(24) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '作者',  `speciesno` int NOT NULL COMMENT '种类编号',  `describe` varchar(250) NOT NULL COMMENT '描述',  `price` int NOT NULL COMMENT '单价',  `place` char(24) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '位置',  `statusno` int NOT NULL COMMENT '状态编号',  PRIMARY KEY (`id`),  KEY `statusno` (`statusno`),  KEY `speciesno` (`speciesno`),  CONSTRAINT `speciesno` FOREIGN KEY (`speciesno`) REFERENCES `species` (`speciesno`),  CONSTRAINT `statusno` FOREIGN KEY (`statusno`) REFERENCES `status` (`statusno`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表结构:</p><p>+———–+—————————+——+—–+———+—————-+<br>        | Field     | Type                      | Null | Key | Default | Extra          |<br>        +———–+—————————+——+—–+———+—————-+<br>        | id        | int(10) unsigned zerofill | NO   | PRI | NULL    | auto_increment |<br>        | bookname  | char(24)                   | NO   |     | NULL    |                |<br>        | author    | char(24)                   | NO   |     | NULL    |                |<br>        | speciesno | int                       | NO   | MUL | NULL    |                |<br>        | describe  | varchar(250)              | NO   |     | NULL    |                |<br>        | price     | int                       | NO   |     | NULL    |                |<br>        | place     | char(24)                   | NO   |     | NULL    |                |<br>        | statusno  | int                       | NO   | MUL | NULL    |                |<br>        +———–+—————————+——+—–+———+—————-+</p><p>bookno表创建代码:</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE `bookno` (  `bookno` char(24) NOT NULL,  `statusno` int NOT NULL,  `id` int(10) unsigned zerofill NOT NULL,  PRIMARY KEY (`bookno`),  KEY `id` (`id`),  KEY `status` (`statusno`),  CONSTRAINT `id` FOREIGN KEY (`id`) REFERENCES `bookinfo` (`id`),  CONSTRAINT `status` FOREIGN KEY (`statusno`) REFERENCES `status` (`statusno`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表结构:</p><p>+———-+—————————+——+—–+———+——-+<br>        | Field    | Type                      | Null | Key | Default | Extra |<br>        +———-+—————————+——+—–+———+——-+<br>        | bookno   | char(24)                  | NO   | PRI | NULL    |       |<br>        | statusno | int                       | NO   | MUL | NULL    |       |<br>        | id       | int(10) unsigned zerofill | NO   | MUL | NULL    |       |<br>        +———-+—————————+——+—–+———+——-+</p><p>species表创建代码:</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE `species` (  `speciesno` int NOT NULL AUTO_INCREMENT COMMENT '种类编号',  `species` char(24) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '种类',  PRIMARY KEY (`speciesno`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表结构:</p><p>+———–+———+——+—–+———+—————-+<br>        | Field     | Type    | Null | Key | Default | Extra          |<br>        +———–+———+——+—–+———+—————-+<br>        | speciesno | int     | NO   | PRI | NULL    | auto_increment |<br>        | species   | char(24) | NO   |     | NULL    |                |<br>        +———–+———+——+—–+———+—————-+</p><p>status表创建代码:</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE `status` (  `statusno` int NOT NULL AUTO_INCREMENT COMMENT '状态编号',  `status` char(24) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '状态',  PRIMARY KEY (`statusno`)) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表结构:</p><p>+———-+———+——+—–+———+—————-+<br>        | Field    | Type    | Null | Key | Default | Extra          |<br>        +———-+———+——+—–+———+—————-+<br>        | statusno | int     | NO   | PRI | NULL    | auto_increment |<br>        | status   | char(24) | NO   |     | NULL    |                |<br>        +———-+———+——+—–+———+—————-+</p><p>表二:租书信息:</p><p>E-R图: 创建三个表orders表和penalty表以及type表</p><img src="/medias/JavaWeb/BookManagementSystem/BorrowingE-R.jpg" alt="租书e-r图"><p>orders表:</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE `orders` (  `ordernum` char(16) NOT NULL COMMENT '订单编号',  `code` char(24) NOT NULL COMMENT '账号',  `typeno` int NOT NULL COMMENT '账号类型编号',  `bookname` char(24) NOT NULL COMMENT '书名',  `bookno` char(24) NOT NULL COMMENT '书籍编号',  `lendtiem` date NOT NULL COMMENT '借书时间',  `repaytime` date NOT NULL COMMENT '还书时间',  `overdue` int NOT NULL COMMENT '逾期',  `penalty` int NOT NULL COMMENT '罚款',  `penaltystatusno` int NOT NULL COMMENT '罚款状态编号',  `statusno` int NOT NULL COMMENT '状态编号',  `operator` char(24) NOT NULL COMMENT '操作员',  PRIMARY KEY (`ordernum`),  KEY `statusid` (`statusno`),  KEY `bookno` (`bookno`),  KEY `typeno` (`typeno`),  KEY `penalty` (`penaltystatusno`),  CONSTRAINT `bookno` FOREIGN KEY (`bookno`) REFERENCES `bookno` (`bookno`),  CONSTRAINT `penalty` FOREIGN KEY (`penaltystatusno`) REFERENCES `penalty` (`penaltystatusno`),  CONSTRAINT `statusid` FOREIGN KEY (`statusno`) REFERENCES `status` (`statusno`),  CONSTRAINT `typeno` FOREIGN KEY (`typeno`) REFERENCES `type` (`typeno`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表结构:</p><p>+—————–+———-+——+—–+———+——-+<br>        | Field           | Type     | Null | Key | Default | Extra |<br>        +—————–+———-+——+—–+———+——-+<br>        | ordernum        | char(16) | NO   | PRI | NULL    |       |<br>        | code            | char(24) | NO   |     | NULL    |       |<br>        | typeno          | int      | NO   | MUL | NULL    |       |<br>        | bookname        | char(24) | NO   |     | NULL    |       |<br>        | bookno          | char(24) | NO   | MUL | NULL    |       |<br>        | lendtiem        | date     | NO   |     | NULL    |       |<br>        | repaytime       | date     | NO   |     | NULL    |       |<br>        | overdue         | int      | NO   |     | NULL    |       |<br>        | penalty         | int      | NO   |     | NULL    |       |<br>        | penaltystatusno | int      | NO   | MUL | NULL    |       |<br>        | statusno        | int      | NO   | MUL | NULL    |       |<br>        | operator        | char(24) | NO   |     | NULL    |       |<br>        +—————–+———-+——+—–+———+——-+</p><p>penalty表 :</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE `penalty` (  `penaltystatusno` int NOT NULL AUTO_INCREMENT COMMENT '罚款状态编号',  `penaltystatus` char(24) NOT NULL COMMENT '罚款状态',  PRIMARY KEY (`penaltystatusno`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表结构:</p><p>+—————–+———-+——+—–+———+—————-+<br>        | Field           | Type     | Null | Key | Default | Extra          |<br>        +—————–+———-+——+—–+———+—————-+<br>        | penaltystatusno | int      | NO   | PRI | NULL    | auto_increment |<br>        | penaltystatus   | char(24) | NO   |     | NULL    |                |<br>        +—————–+———-+——+—–+———+—————-+</p><p>type表:</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE `type` (  `typeno` int NOT NULL AUTO_INCREMENT COMMENT '类型编号',  `type` char(24) NOT NULL COMMENT '账号类型',  PRIMARY KEY (`typeno`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表结构:</p><p>+——–+———-+——+—–+———+—————-+<br>        | Field  | Type     | Null | Key | Default | Extra          |<br>        +——–+———-+——+—–+———+—————-+<br>        | typeno | int      | NO   | PRI | NULL    | auto_increment |<br>        | type   | char(24) | NO   |     | NULL    |                |<br>        +——–+———-+——+—–+———+—————-+</p><p>表三:工作人员表:</p><p>E-R图: 创建三个表employee表,department表和post表</p><img src="/medias/JavaWeb/BookManagementSystem/Employee.jpg" alt="员工E-R图"><p>employee表:</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>表结构:</p><p>department表:</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>表结构:</p><p>post表:</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>表结构:</p><p>表四:管理员表:</p><img src="/medias/JavaWeb/BookManagementSystem/Admin.jpg" alt="管理员E-R图"><p>表五:用户表</p><img src="/medias/JavaWeb/BookManagementSystem/Customer.jpg" alt="用户E-R图">]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo + github 搭建个人博客教程 及遇到的问题</title>
      <link href="/wo-de-di-yi-pian-bo-ke/2021/07/29/"/>
      <url>/wo-de-di-yi-pian-bo-ke/2021/07/29/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​        欢迎查看我的第一篇博客,该博客记录了博客的搭建方法以及测试博客内容的更新／发布／查看等功能而编写的测试博客，我的个人博客是为了记录在开发过程中遇到的问题及解决方案而建设的，采用的是＇ｇｉｔｈｕｂ　＋　ｈｅｘｏ＇技术搭建的，搭建教程在网上有很多，想要搭建个人博客的朋友可以自行搜索，当然也可以查看我找到的这篇搭建教程：</p><h1 id="一，使用hexo-github免费搭建个人博客网站超详细教程"><a href="#一，使用hexo-github免费搭建个人博客网站超详细教程" class="headerlink" title="一，使用hexo+github免费搭建个人博客网站超详细教程"></a>一，使用hexo+github免费搭建个人博客网站超详细教程</h1><blockquote><p>版权声明：本文为CSDN博主「wapchief」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/wapchief/article/details/54602515">https://blog.csdn.net/wapchief/article/details/54602515</a></p><p>搭建的时候也是参考别人的教程一点点跟进，但是都有缺陷。<br>比如分支的创建，和私人域名的解析，有这方面的教程但是都不是太完善，有些只是教你搭建但是后期没有考虑换电脑，换环境的情况。包括后期维护等等。</p><p>优点<br>1、不需要服务器，github免费提供的托管服务<br>2、不需要域名，github同样提供了一个.io的域名<br>3、不用自己写xml、hexo提供了很多开源的博客模板。<br>4、便于维护更新，换风格直接换模板就行。</p><p>###进入正题###</p><p>安装相关工具<br>1、安装Node.js<br><a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x86.msi">https://nodejs.org/dist/v4.2.3/node-v4.2.3-x86.msi</a><br><a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x64.msi">https://nodejs.org/dist/v4.2.3/node-v4.2.3-x64.msi</a><br>选择需要的版本下载，分别是32位和64位。下载后安装一直默认下一步就行。<br>2、安装Git<br>Git-2.11.0.3-32-bit.exe<br>Git-2.11.0.3-64-bit.exe<br>打开cmd命令行(win+r 输入cmd回车)分别执行以下命令,会得到相对应的版本信息</p><pre class="line-numbers language-none"><code class="language-none">node -v #显示版本 v14.17.3&gt;npm -v #显示版本 6.14.13git --version #显示版本 git version 2.32.0.windows.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果都可以成功运行出现版本信息证明安装成功。<br>3、安装Hexo<br>必须按照步骤来，因为hexo需要使用node.js的npm命令。<br>打开cmd命令行(win+r 输入cmd回车)分别执行</p><pre class="line-numbers language-none"><code class="language-none">&gt;npm install hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>等待自动安装完成后。输入</p><pre class="line-numbers language-none"><code class="language-none">&gt;hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查是否安装成功<br>到这一步如果所有都安装成功，并测试无问题，那么本地配置已经搞定，下面开始在github上建项目了。</p><p>#####在github上创建并设置远程库<br>注册登录略过，不会的请自行百度。<br><strong>登录后点击“+”号，选择New repository，下一步<br>在Repository name下面填写你要创建的地址，这个地址是就是你的域名，以github.io结尾。</strong>例如填写wapchief.github.io以后就在地址栏直接输入wapchief.github.io就可以访问网站<br>按照提示一步步完成创建。<br>创建之后，点击setting设置远程库：<br>找到GitHub Pages点击Automatic page generator<br>等待github pages创建完成，然后输入你创建的地址测试github pager是否创建成功。此时页面是空的没有任何东西。</p><p>下面要做的就是使用hexo模板将源码放到github。</p><p>#####初始化Hexo<br>创建一个文件夹用于存放hexo。然后右键该文件夹使用</p><pre class="line-numbers language-none"><code class="language-none">git bash here<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>命令就可以直接定位到当前目录。</p><p>然后使用</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>初始化hexo基础配置文件,这个我在创建的时候需要指定一个初始化文件夹。初始化时间比较长，不用急，等完成后输入</p><pre class="line-numbers language-none"><code class="language-none">hexo init hexo  # 可以换成其他的,这个会在你的hexo目录下自动创建一个hexo文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>初始化hexo。这个命令和git 仓库命令相似。意思一样都是初始化。<br>接着输入</p><pre class="line-numbers language-none"><code class="language-none">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置node。然后输入</p> <pre class="line-numbers language-none"><code class="language-none">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>加载hexo基础html、css、js等文件。<br>在这完成后等于已经在本地创建了一个网页，想查看的话，输入</p><pre class="line-numbers language-none"><code class="language-none">&gt;hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后相当于开启了一个本地的服务器，会提示你拷贝url到浏览器。<br>(如图)<br>在浏览器输入 <a href="http://localhost:4000/">http://localhost:4000/</a><br>会看到这样的页面，证明本地hexo默认模板配置成功，</p><p>到这一步如果将hexo放到github page，那么使用github.io访问的将是一个默认的页面。下面我们要把他diy成自己的博客，包括导入模板主题等。</p><p>安装主题<br>关于主题大多都是以压缩包形式，可以去github上搜hexo theme，会出来很多，里面都有介绍。<br>比如我们要用第一个。<br>可以通过两种方法，这里我直接使用git命令完成，具体请参考next官方文档：<a href="http://theme-next.iissnan.com/getting-started.html">http://theme-next.iissnan.com/getting-started.html</a><br>继续在我们的本地hexo目录输入</p><pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/iissnan/hexo-theme-next themes/next<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>等待下载完成。如果出现失败的提示，有可能是网络环境不好。重试即可。<br>ok，下载完主题后我们打开文件夹，找到themes文件夹，发现里面多了个<br>next<br>这个就是我们下载下来下来的主题文件。<br>接下来我们回到hexo根目录下用记事本打开_config.yml文件。<br>把landscape修改成next就行了。<br>我们再运行</p><pre class="line-numbers language-none"><code class="language-none">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开浏览器地址栏输<a href="http://localhost:4000/">http://localhost:4000/</a><br>现在是我们修改主题后的页面。</p><p>修改内容<br>内容较多建议参考官方文档<br><a href="https://hexo.io/zh-cn/docs/configuration.html">https://hexo.io/zh-cn/docs/configuration.html</a><br>修改完之后，可以重新执行hexo s在浏览器查看效果。并确认无误，包括以后需要添加文章，或者更新主题等，都建议先在本地查看无误再远程部署。<br>根_config.yml文件中</p><h1 id="Site"><a href="#Site" class="headerlink" title="Site"></a>Site</h1><pre class="line-numbers language-none"><code class="language-none">title: 网站标题&gt;subtitle: 副标题description: 个人签名author: 姓名language: zh-Hans&gt;timezone:这里有几个坑需要注意一下：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1、所有的配置“:”符号后面都要带空格，否则执行本地测试直接失败。<br>2、language是设置语言。zh-Hans是中文。<br>3、如果设置zh-Hans后仍出现乱码问题。需要更改文件的字符编码集为UTF-8,方法很多具体，就不详细介绍了。</p><p>注意同时要在，根_config.yml中配置自己的远程仓库地址</p><h1 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h1><h2 id="Docs-https-hexo-io-docs-deployment-html"><a href="#Docs-https-hexo-io-docs-deployment-html" class="headerlink" title="Docs: https://hexo.io/docs/deployment.html"></a>Docs: <a href="https://hexo.io/docs/deployment.html">https://hexo.io/docs/deployment.html</a></h2><blockquote><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repo: https://github.com/wapchief/wapchief.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>这一步很关键，不要漏了。</p><p>提交项目，部署<br>继续在本目录命令行<br>安装部署工具（方便以后更新）</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-deployer-git -save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1、初始化本地仓库：</p><pre class="line-numbers language-none"><code class="language-none">git init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、连接远程仓库：<br>如果是第一次使用git，在使用git的时候会提示输入用户名和密码，用户名是自己的注册邮箱。</p><pre class="line-numbers language-none"><code class="language-none">git remote add origin https://github.com/wapchief/wapchief.github.io.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、发布hexo到github page</p><pre class="line-numbers language-none"><code class="language-none">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、添加文件到本地仓库</p><pre class="line-numbers language-none"><code class="language-none">git add<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5、提交声明</p><pre class="line-numbers language-none"><code class="language-none">&gt;git commit -m '内容'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6、推送到远程仓库（github）<br>这里建议创建一个新的分支hexo，用于管理hexo文件。提交的的时候只提交hexo网站html、css、等源文件。而默认的master用来部署更新项目,具体可以看我的github地址分支情况<a href="https://github.com/wapchief/wapchief.github.io">https://github.com/wapchief/wapchief.github.io</a><br>创建并切换到新建分支：</p><pre class="line-numbers language-none"><code class="language-none">&gt;git checkout -b hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将分支推送到远程仓库：</p><pre class="line-numbers language-none"><code class="language-none">&gt;git push origin hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这时打开网站就能看到效果了。</p><p>记得提交以后去github上把hexo分支设置默认，以后写文章等都要部署。<br>文章在hexo目录下的\source_posts文件夹中，是md格式，也就是Markdown格式。<br>以后可以用以下命令部署。也就是第三步</p><p>//等于一次性执行了，清空、刷新、部署三个命令</p><pre class="line-numbers language-none"><code class="language-none">&gt;hexo clean &amp;&amp; hexo g &amp;&amp; hexo ｄ<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果部署时不clean，可能之前修改的文章还存在。包括一些配置等，有时候部署完成后并没有改变，其实是缓存未清除。</p><h2 id="进阶-绑定域名"><a href="#进阶-绑定域名" class="headerlink" title="进阶-绑定域名"></a>进阶-绑定域名</h2><p>域名可以自行去阿里云，景安等网站购买。一般都有系统提示步骤。<br>拿到域名之后，进行解析，推荐使用dnspod免费解析。<br>具体使用方法：<br>1、注册登录dnspod之后，添加域名，然后解析，添加两条记录</p><p>2、登录你注册域名网站的管理后台，修改DNS解析地址为</p><pre class="line-numbers language-none"><code class="language-none">f1g1ns1.dnspod.netf1g1ns2.dnspod.net<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3、登录github，找到项目，设置setting，找到GitHub Pages</p><p>4、在master分支下的CNAME.MD文件写入注册的域名</p><p>​        再次访问差不多就好了，如果延迟的话，可能解析立马不会生效。需要等会儿才能看到。<br>————————————————</p></blockquote><h1 id="二，存在的问题"><a href="#二，存在的问题" class="headerlink" title="二，存在的问题"></a>二，存在的问题</h1><h2 id="1，无法git-push-－u-origin-master如图："><a href="#1，无法git-push-－u-origin-master如图：" class="headerlink" title="1，无法ｇｉｔ　ｐｕｓｈ　－ｕ　ｏｒｉｇｉｎ　ｍａｓｔｅｒ如图："></a>1，无法ｇｉｔ　ｐｕｓｈ　－ｕ　ｏｒｉｇｉｎ　ｍａｓｔｅｒ如图：</h2><img src=" /medias/blog/blog_001/git push err.png"><h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p><strong>问题原因</strong>： 远程库与本地库不一致造成的，在hint中也有提示把远程库同步到本地库就可以了。</p><p><strong>解决办法</strong>：使用命令行：</p><pre class="line-numbers language-none"><code class="language-none">git pull --rebase origin master<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​        该命令的意思是把远程库中的更新合并到（pull=fetch+merge）本地库中，–-rebase的作用是取消掉本地库中刚刚的commit，并把他们接到更新后的版本库之中。出现如下图执行pull执行成功后，可以成功执行<code>git push origin master</code>操作</p><h2 id="2-在验证上述问题解决方案是发生错误"><a href="#2-在验证上述问题解决方案是发生错误" class="headerlink" title="2,  在验证上述问题解决方案是发生错误"></a>2,  在验证上述问题解决方案是发生错误</h2><img src=" /medias/blog/blog_001/git pull rebase origin master.png"><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法:"></a>解决办法:</h3><p>​        问题原因: 提交到版本库中的文件没有没有提交到 分支中,还在暂存区</p><p><strong>解决办法</strong>：使用命令行：</p><pre class="line-numbers language-none"><code class="language-none">git commit -m 'xx' <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-上传Typora图片无法显示问题"><a href="#3-上传Typora图片无法显示问题" class="headerlink" title="3,上传Typora图片无法显示问题"></a>3,上传Typora图片无法显示问题</h2><p>​        我找到的解决方案是用html标签的img标签添加图片路径,但是md文件中不会显示图片,请有更好解决办法的朋友留言,Markdown软件是Typora</p>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客搭建 </tag>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
